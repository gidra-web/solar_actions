name: Solar Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - "feature/*"
  pull_request:
    branches:
      - main
env:
  MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-test:
    name: Unit Test
    strategy:
      matrix:
        node-version: [20, 22]
        os: [ubuntu-latest]

    runs-on: ubuntu-latest
    container:
      image: node:${{ matrix.node-version }}
    services:
      mongo-service:
        image: siddharth67/mongo-db:non-prod
        options: --name mongo
        env:
          MONGODB_URI: "mongodb://mongo/superData"
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #   - name: Install Node.js - $-{{ matrix.node-version }}
      #     uses: actions/setup-node@v4
      #     with:
      #       node-version: $-{{ matrix.node-version }}

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm install
      - run: ls -ltr

      - name: Run unit tests
        run: npm run test

      - name: Archive unit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result - ${{ matrix.node-version }}
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    services:
      mongo-service:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
        env:
          MONGODB_URI: "mongodb://localhost:27017/superData"
          MONGO_USERNAME: non-prod-user
          MONGO_PASSWORD: non-prod-password
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js - 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Run code coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Report
          path: coverage

  docker:
    name: Containerization
    needs: [unit-test, code-coverage]
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      #   - name: GHCR Login
      #     uses: docker/login-action@v2.2.0
      #     with:
      #       registry: ghcr.io
      #       username: $-{{ github.repository_owner }}
      #       password: $-{{ secrets.GITHUB_TOKEN }}

      - name: Docker Build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

      - name: Docker Image testing
        run: |
          docker images
          docker run --name solar-system-app -d \
          -p 3000:3000 \
          -e MONGO_URI=${{ env.MONGO_URI }} \
          -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
          -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
          ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          wget -q -O - 127.0.0.1:3000/live | grep live

      - name: Docker Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

  dev-deploy:
    if: contains(github.ref, 'feature/')
    needs: docker
    uses: .github/workflows/env-deployment.yaml

  dev-integration-testing:
    if: contains(github.ref, 'feature/')
    name: Dev Integration Testing
    needs: dev-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Test URL Output using CURL and JQ
        env:
          URL: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}
        run: |
          echo $URL
          echo "--------------------------------------------"
          curl https://$URL/live -s -k | jq -r .status | grep -i live
  prod-deploy:
    if: github.ref == 'refs/heads/main'
    needs: docker
    uses: .github/workflows/env-deployment.yaml

  prod-integration-testing:
    if: github.ref == 'refs/heads/main'
    name: Prod Integration Testing
    needs: prod-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Test URL Output using CURL and JQ
        env:
          URL: ${{ needs.prod-deploy.outputs.APP_INGRESS_URL }}
        run: |
          echo $URL
          echo "--------------------------------------------"
          curl https://$URL/live -s -k | jq -r .status | grep -i live
